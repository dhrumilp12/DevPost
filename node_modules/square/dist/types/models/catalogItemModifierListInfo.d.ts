import { Schema } from '../schema';
import { CatalogModifierOverride } from './catalogModifierOverride';
/**
 * References a text-based modifier or a list of non text-based modifiers applied to a `CatalogItem` instance
 * and specifies supported behaviors of the application.
 */
export interface CatalogItemModifierListInfo {
    /** The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`. */
    modifierListId: string;
    /** A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default. */
    modifierOverrides?: CatalogModifierOverride[] | null;
    /** If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`. */
    minSelectedModifiers?: number | null;
    /** If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`. */
    maxSelectedModifiers?: number | null;
    /** If `true`, enable this `CatalogModifierList`. The default value is `true`. */
    enabled?: boolean | null;
    /**
     * The position of this `CatalogItemModifierListInfo` object within the `modifier_list_info` list applied
     * to a `CatalogItem` instance.
     */
    ordinal?: number | null;
}
export declare const catalogItemModifierListInfoSchema: Schema<CatalogItemModifierListInfo>;
